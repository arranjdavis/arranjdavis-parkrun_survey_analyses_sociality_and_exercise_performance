candidate_1042202_all_qs = as.list(append(c("1042202"), c(candidate_1042202_section_1, candidate_1042202_section_2,
candidate_1042202_section_3, candidate_1042202_r_script)))
can_dat = data.frame(candidate_1042202_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### ### ### ### ### ### ### ### ###
### CANDIDATE 1042461 ###
candidate_1042461_section_1 = c(5, 6, 6, 6, 6) #30 points, 5 questions
candidate_1042461_section_2 = c(4, 0, 4.5, 6, 3, 2, 6) #30 points, 7 questions
candidate_1042461_section_3 = c(7, 3, 6) #30 points, 7 questions
candidate_1042461_r_script = c(3, 2, 2) #10 points, 3 questions
candidate_1042461_total = sum(candidate_1042461_section_1) + sum(candidate_1042461_section_2) +
sum(candidate_1042461_section_3) + sum(candidate_1042461_r_script)
print('candidate: 1042461')
print(paste('Section 1 score:', sum(candidate_1042461_section_1)))
print(paste('Section 2 score:', sum(candidate_1042461_section_2)))
print(paste('Section 3 score:', sum(candidate_1042461_section_3)))
print(paste('R script score:', sum(candidate_1042461_r_script)))
print(paste('Total score:', sum(candidate_1042461_total)))
#add candidate data to the total dataset
candidate_1042461_all_qs = as.list(append(c("1042461"), c(candidate_1042461_section_1, candidate_1042461_section_2,
candidate_1042461_section_3, candidate_1042461_r_script)))
can_dat = data.frame(candidate_1042461_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### ### ### ### ### ### ### ### ###
### CANDIDATE 1042580 ###
candidate_1042580_section_1 = c(4, 6, 2, 6, 5) #30 points, 5 questions
candidate_1042580_section_2 = c(4, 4, 5, 6, 3, 1, 6) #30 points, 7 questions
candidate_1042580_section_3 = c(10, 9, 6) #30 points, 7 questions
candidate_1042580_r_script = c(3, 3, 3) #10 points, 3 questions
candidate_1042580_total = sum(candidate_1042580_section_1) + sum(candidate_1042580_section_2) +
sum(candidate_1042580_section_3) + sum(candidate_1042580_r_script)
print('candidate: 1042580')
print(paste('Section 1 score:', sum(candidate_1042580_section_1)))
print(paste('Section 2 score:', sum(candidate_1042580_section_2)))
print(paste('Section 3 score:', sum(candidate_1042580_section_3)))
print(paste('R script score:', sum(candidate_1042580_r_script)))
print(paste('Total score:', sum(candidate_1042580_total)))
#add candidate data to the total dataset
candidate_1042580_all_qs = as.list(append(c("1042580"), c(candidate_1042580_section_1, candidate_1042580_section_2,
candidate_1042580_section_3, candidate_1042580_r_script)))
can_dat = data.frame(candidate_1042580_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### ### ### ### ### ### ### ### ###
### CANDIDATE 1043933 ###
candidate_1043933_section_1 = c(6, 6, 6, 6, 6) #30 points, 5 questions
candidate_1043933_section_2 = c(4, 3, 5, 6, 3, 2, 6) #30 points, 7 questions
candidate_1043933_section_3 = c(10, 10, 10) #30 points, 7 questions
candidate_1043933_r_script = c(3, 3, 4) #10 points, 3 questions
candidate_1043933_total = sum(candidate_1043933_section_1) + sum(candidate_1043933_section_2) +
sum(candidate_1043933_section_3) + sum(candidate_1043933_r_script)
print('candidate: 1043933')
print(paste('Section 1 score:', sum(candidate_1043933_section_1)))
print(paste('Section 2 score:', sum(candidate_1043933_section_2)))
print(paste('Section 3 score:', sum(candidate_1043933_section_3)))
print(paste('R script score:', sum(candidate_1043933_r_script)))
print(paste('Total score:', sum(candidate_1043933_total)))
#add candidate data to the total dataset
candidate_1043933_all_qs = as.list(append(c("1043933"), c(candidate_1043933_section_1, candidate_1043933_section_2,
candidate_1043933_section_3, candidate_1043933_r_script)))
can_dat = data.frame(candidate_1043933_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### ### ### ### ### ### ### ### ###
### CANDIDATE 1044336 ###
candidate_1044336_section_1 = c(4, 6, 4, 4, 6) #30 points, 5 questions
candidate_1044336_section_2 = c(4, 3, 5, 6, 0, 2, 6) #30 points, 7 questions
candidate_1044336_section_3 = c(6, 10, 6) #30 points, 7 questions
candidate_1044336_r_script = c(1, 3, 1) #10 points, 3 questions
candidate_1044336_total = sum(candidate_1044336_section_1) + sum(candidate_1044336_section_2) +
sum(candidate_1044336_section_3) + sum(candidate_1044336_r_script)
print('candidate: 1044336')
print(paste('Section 1 score:', sum(candidate_1044336_section_1)))
print(paste('Section 2 score:', sum(candidate_1044336_section_2)))
print(paste('Section 3 score:', sum(candidate_1044336_section_3)))
print(paste('R script score:', sum(candidate_1044336_r_script)))
print(paste('Total score:', sum(candidate_1044336_total)))
#add candidate data to the total dataset
candidate_1044336_all_qs = as.list(append(c("1044336"), c(candidate_1044336_section_1, candidate_1044336_section_2,
candidate_1044336_section_3, candidate_1044336_r_script)))
can_dat = data.frame(candidate_1044336_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### CANDIDATE 1044596 ###
candidate_1044596_section_1 = c(5, 5, 4, 6, 4) #30 points, 5 questions
candidate_1044596_section_2 = c(4, 3, 5, 6, 3, 2, 1) #30 points, 7 questions
candidate_1044596_section_3 = c(5, 7, 3.5) #30 points, 7 questions
candidate_1044596_r_script = c(3, 3, 3) #10 points, 3 questions
candidate_1044596_total = sum(candidate_1044596_section_1) + sum(candidate_1044596_section_2) +
sum(candidate_1044596_section_3) + sum(candidate_1044596_r_script)
print('candidate: 1044596')
print(paste('Section 1 score:', sum(candidate_1044596_section_1)))
print(paste('Section 2 score:', sum(candidate_1044596_section_2)))
print(paste('Section 3 score:', sum(candidate_1044596_section_3)))
print(paste('R script score:', sum(candidate_1044596_r_script)))
print(paste('Total score:', sum(candidate_1044596_total)))
#add candidate data to the total dataset
candidate_1044596_all_qs = as.list(append(c("1044596"), c(candidate_1044596_section_1, candidate_1044596_section_2,
candidate_1044596_section_3, candidate_1044596_r_script)))
can_dat = data.frame(candidate_1044596_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### CANDIDATE 1046474 ###
candidate_1046474_section_1 = c(5, 6, 4, 6, 6) #30 points, 5 questions
candidate_1046474_section_2 = c(4, 4, 5, 6, 3, 2, 3) #30 points, 7 questions
candidate_1046474_section_3 = c(7, 9, 1) #30 points, 7 questions
candidate_1046474_r_script = c(3, 3, 2) #10 points, 3 questions
candidate_1046474_total = sum(candidate_1046474_section_1) + sum(candidate_1046474_section_2) +
sum(candidate_1046474_section_3) + sum(candidate_1046474_r_script)
print('candidate: 1046474')
print(paste('Section 1 score:', sum(candidate_1046474_section_1)))
print(paste('Section 2 score:', sum(candidate_1046474_section_2)))
print(paste('Section 3 score:', sum(candidate_1046474_section_3)))
print(paste('R script score:', sum(candidate_1046474_r_script)))
print(paste('Total score:', sum(candidate_1046474_total)))
#add candidate data to the total dataset
candidate_1046474_all_qs = as.list(append(c("1046474"), c(candidate_1046474_section_1, candidate_1046474_section_2,
candidate_1046474_section_3, candidate_1046474_r_script)))
can_dat = data.frame(candidate_1046474_all_qs)
colnames(can_dat) = all_questions
total_data = rbind(total_data, can_dat)
### CREATE A TOTAL SCORE VARIABLE ###
#convert all columns to numeric
total_data[, c(2:19)] = lapply(total_data[, c(2:19)], function(x) as.numeric(as.character(x)))
#create section score variables
total_data$section_1_score = rowSums(total_data[, c(2:6)])
total_data$section_2_score = rowSums(total_data[, c(7:13)])
total_data$section_3_score = rowSums(total_data[, c(14:19)])
#include all questions in total score variable
total_data$total_score = rowSums(total_data[, c(2:19)])
View(total_data)
### CANDIDATE 1039894 ###
candidate_1039894_section_1 = c(4.5, 6, 4, 3, 6) #30 points, 5 questions
candidate_1039894_section_2 = c(4, 3, 5, 6, 3,  1, 5) #30 points, 7 questions
candidate_1039894_section_3 = c(4, 9, 9) #30 points, 7 questions
candidate_1039894_r_script = c(1, 3, 4) #10 points, 3 questions
candidate_1039894_total = sum(candidate_1039894_section_1) + sum(candidate_1039894_section_2) +
sum(candidate_1039894_section_3) + sum(candidate_1039894_r_script)
print('candidate: 1039894')
print(paste('Section 1 score:', sum(candidate_1039894_section_1)))
print(paste('Section 2 score:', sum(candidate_1039894_section_2)))
print(paste('Section 3 score:', sum(candidate_1039894_section_3)))
print(paste('R script score:', sum(candidate_1039894_r_script)))
print(paste('Total score:', sum(candidate_1039894_total)))
candidate_1039894_section_2 = c(4, 3, 5, 6, 3,  1, 5) #30 points, 7 questions
candidate_1039894_section_3 = c(4, 9, 9) #30 points, 7 questions
print('candidate: 1039894')
print(paste('Section 1 score:', sum(candidate_1039894_section_1)))
print(paste('Section 2 score:', sum(candidate_1039894_section_2)))
print(paste('Section 3 score:', sum(candidate_1039894_section_3)))
print(paste('R script score:', sum(candidate_1039894_r_script)))
print(paste('Total score:', sum(candidate_1039894_total)))
candidate_1039894_section_2 = c(4, 3, 5, 6, 3,  1, 6) #30 points, 7 questions
print(paste('Section 2 score:', sum(candidate_1039894_section_2)))
4+34+8 + 58+22+56 + 25+3+6 + 3+31+10
4+58+25+3
34+22+3+31
8+56+6+10
8+56+16+10
#data
ps_dat = read.xlsx('/Users/arrandavis/Desktop/playstation_cleaned_VAD.xlsx')
library(openxlsx)
#data
ps_dat = read.xlsx('/Users/arrandavis/Desktop/playstation_cleaned_VAD.xlsx')
### PLOT SPECIFICATIONS ###
library(ggplot2)
#texture fonts
quartzFonts(texture_helv  = c('Helvetica-Bold',
'Helvetica-Bold',
'Helvetica-Oblique',
'Helvetica-BoldOblique'))
#texture theme
point_size = 1
header_size = 12
axis_title_size = 12
axis_size = 10
original_theme = theme(text=element_text(size=header_size,family='texture_helv'),
title = element_text(size = header_size),
axis.text.x = element_text(color='black',size=axis_size, angle = 90),
axis.text.y = element_text(color='black',size=axis_size),
axis.title.x = element_text(size = axis_title_size, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = axis_title_size, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_rect(colour = '#FFFFFF',fill='#FFFFFF'),
panel.grid.major = element_line(color = '#e7e7e7'),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(), plot.margin = margin(1, 1, 1, 1, 'cm'))
no_x_label_theme = theme(text=element_text(size=header_size,family='texture_helv'),
title = element_text(size = header_size),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(color='black',size=axis_size),
axis.title.x = element_text(size = axis_title_size, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = axis_title_size, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_rect(colour = '#FFFFFF',fill='#FFFFFF'),
panel.grid.major = element_line(color = '#e7e7e7'),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(), plot.margin = margin(1, 1, 1, 1, 'cm'))
View(ps_dat)
View(ps_dat)
View(ps_dat)
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram()
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() + original_theme
original_theme = theme(text=element_text(size=header_size,family='texture_helv'),
title = element_text(size = header_size),
axis.text.x = element_text(color='black',size=axis_size),
axis.text.y = element_text(color='black',size=axis_size),
axis.title.x = element_text(size = axis_title_size, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = axis_title_size, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_rect(colour = '#FFFFFF',fill='#FFFFFF'),
panel.grid.major = element_line(color = '#e7e7e7'),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(), plot.margin = margin(1, 1, 1, 1, 'cm'))
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() + original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ylab("Count") + xlab("Mean word valence for text line 1 of each advertisement")
original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ylab("Count") + xlab("Mean word valence for text line 1 of each advertisement") +
original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence for text line 1 of each Playstation advertisement")
ylab("Count") + xlab("Valence") +
original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence for text line 1 of each Playstation advertisement") +
ylab("Count") + xlab("Valence") +
original_theme
ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
getwd()
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ggsave("./Desktop/ps_val_line1.jpg", ps_val_line1, width = 10, height = 7.5)
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ggsave("/Desktop/ps_val_line1.jpg", ps_val_line1, width = 10, height = 7.5)
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ggsave("./Desktop/ps_val_line1.jpg", ps_val_line1, width = 10, height = 7.5)
### HISTOGRAMS ###
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ps_val_line1
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ps_val_line1
### HISTOGRAMS ###
ps_val_line1 = ggplot(ps_dat, aes(x=mean_valence_line1)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 1)") +
ylab("Count") + xlab("Valence") +
original_theme
ps_val_line1
setwd('/Users/arrandavis/Desktop')
ps_val_line2 = ggplot(ps_dat, aes(x=mean_valence_line2)) + geom_histogram() +
scale_x_continuous(limits = c(4, 8), breaks = seq(4, 8, 1)) +
ggtitle("Mean word valence - Playstation advertisements (line 2)") +
ylab("Count") + xlab("Valence") +
original_theme
ggsave("./Desktop/ps_val_line2.jpg", ps_val_line2, width = 10, height = 7.5)
lloyds_dat = read.xlsx('/Users/arrandavis/Desktop/lloyds_cleaned_VAD.xlsx')
range(lloyds_dat$CTR)
range(lloyds_dat$CTR)
ggplot(lloyds_dat, aes(x=CTR)) + geom_histogram(bins = 50) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, .1)) +
#scale_y_continuous(limits = c(0, 500), breaks = seq(0, 500, 100)) +
ggtitle("CTR - Lloyds advertisements") +
ylab("Count") + xlab("CTR") +
original_theme
ggplot(ps_dat, aes(x=CTR)) + geom_histogram(bins = 50) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, .1)) +
scale_y_continuous(limits = c(0, 500), breaks = seq(0, 500, 100)) +
ggtitle("CTR - Playstation advertisements") +
ylab("Count") + xlab("CTR") +
original_theme
ggplot(ps_dat, aes(x=CTR)) + geom_histogram(bins = 50) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, .1)) +
#scale_y_continuous(limits = c(0, 500), breaks = seq(0, 500, 100)) +
ggtitle("CTR - Playstation advertisements") +
ylab("Count") + xlab("CTR") +
original_theme
#data set
mydata = read.csv("parkrun_survey_data_8Sep2018.csv")
#clean environment
rm(list= ls())
#set current working directory to the one this script is in (when in RStudio)
code_dir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(code_dir)
#load the data
mydata = read.csv("../data/parkrun_survey_data.csv")
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(n = mean(age_integer))
#mean age
mean(age_data$n)
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(n = mean(age_integer))
#set current working directory to the one this script is in (when in RStudio)
code_dir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(code_dir)
library(lubridate)
library(coda)
library(languageR)
library(lme4)
library(lmerTest)
library(e1071)
library(dplyr)
library(ggplot2)
#load the data
mydata = read.csv("../data/parkrun_survey_data.csv")
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(n = mean(age_integer))
#mean age
mean(age_data$n)
View(age_data)
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(n = mean(age_integer))
#mean and median age (by the age category)
mean(age_data$n)
median(age_data)
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(mean_age_category = mean(age_integer))
#mean and median age (by the age category)
mean(age_data$n)
median(age_data$n)
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(mean_age_category = mean(age_integer))
View(age_data)
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#get the median age category
age_data = mydata %>%
#sumarise unique locations attended by each parkrunner
group_by(Athlete_ID) %>%
summarise(age_in_years = mean(age_integer))
View(mydata)
#mean and median age (by the age category)
mean(age_data$age_in_years)
median(age_data$age_in_years)
#summarise mean age category (category could change over time) for each participant
age_data = mydata %>%
group_by(Athlete_ID) %>%
summarise(age_in_years = mean(age_integer))
#create age categories by taking the midpoint of the categories provided by parkrun: (18-19)(20-24)(25-29)(30-34)(35-39)(40-44)(45-49)(50-54)(55-59)(60-64)(65-69)(70-74)(75-79)
mydata$age_integer <- ifelse(mydata$age == "1", 18.5,
ifelse(mydata$age == "2", 22,
ifelse(mydata$age == "3", 27,
ifelse(mydata$age == "4", 32,
ifelse(mydata$age == "5", 37,
ifelse(mydata$age == "6", 42,
ifelse(mydata$age == "7", 47,
ifelse(mydata$age == "8", 52,
ifelse(mydata$age == "9", 57,
ifelse(mydata$age == "10", 62,
ifelse(mydata$age == "11", 67,
ifelse(mydata$age == "12", 72,
ifelse(mydata$age == "13", 77, NA)))))))))))))
#summarise mean age category (category could change over time) for each participant
age_data = mydata %>%
group_by(Athlete_ID) %>%
summarise(age_in_years = mean(age_integer))
#mean,median, range, and SD in age (by the age category)
mean(age_data$age_in_years)
median(age_data$age_in_years)
sd(age_data$age_in_years)
range(age_data$age_in_years)
#table of age categories
table(mydata$age)
